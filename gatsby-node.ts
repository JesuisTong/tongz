import { type GatsbyNode } from "gatsby"
import path from "path"

interface IMdxGraphql {
    allMdx: { edges: Array<{ node: { id: string; slug: string } }> }
}

const createPages: GatsbyNode["createPages"] = async ({ actions, reporter, graphql }) => {
    const { createPage } = actions

    const result = await graphql<IMdxGraphql, any>(`
        query {
            allMdx {
                edges {
                    node {
                        id
                        slug
                    }
                }
            }
        }
    `)

    if (result.errors || !result.data) {
        reporter.panicOnBuild('ðŸš¨  ERROR: Loading "createPages" query')
    }
    // Create blog post pages.
    const posts = result.data!.allMdx.edges

    // you'll call `createPage` for each result
    posts.forEach(({ node }) => {
        createPage({
            // The slug generated by gatsby-plugin-mdx doesn't contain a slash at the beginning
            // You can prepend it with any prefix you want
            path: `/blog/${node.slug}`,
            // This component will wrap our MDX content
            component: path.resolve(`./src/components/posts-layout.tsx`),
            // You can use the values in this context in
            // our page layout component
            context: { id: node.id },
        })
    })
}

exports.createPages = createPages
